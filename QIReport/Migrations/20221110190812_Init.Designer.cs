// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QualityShims;

#nullable disable

namespace QIReport.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221110190812_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QualityShims.Model.ActualDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ActualValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Deviation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InspectionReportId")
                        .HasColumnType("int");

                    b.Property<bool>("IsWithinTolerance")
                        .HasColumnType("bit");

                    b.Property<int>("NominalDimensionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionReportId");

                    b.HasIndex("NominalDimensionId");

                    b.ToTable("ActualDimensions");
                });

            modelBuilder.Entity("QualityShims.Model.InspectionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InspectionStatus")
                        .HasColumnType("bit");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("VisualInspectionStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("UserId");

                    b.ToTable("InspectionReports");

                    b.HasDiscriminator<string>("Discriminator").HasValue("InspectionReport");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("QualityShims.Model.NominalDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BalloonNo")
                        .HasColumnType("int");

                    b.Property<decimal>("LowerDeviation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowerLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NominalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<decimal>("UpperDeviation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UpperLimit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.ToTable("NominalDimensions");
                });

            modelBuilder.Entity("QualityShims.Model.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartTypeId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("QualityShims.Model.PartType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PartTypes");
                });

            modelBuilder.Entity("QualityShims.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QualityShims.Model.ShimInspectionReport", b =>
                {
                    b.HasBaseType("QualityShims.Model.InspectionReport");

                    b.Property<decimal>("AverageDimension")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DifferenceMaxMin")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("ShimInspectionReport");
                });

            modelBuilder.Entity("QualityShims.Model.ActualDimension", b =>
                {
                    b.HasOne("QualityShims.Model.InspectionReport", "InspectionReport")
                        .WithMany("ActualDimensions")
                        .HasForeignKey("InspectionReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QualityShims.Model.NominalDimension", "NominalDimension")
                        .WithMany()
                        .HasForeignKey("NominalDimensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionReport");

                    b.Navigation("NominalDimension");
                });

            modelBuilder.Entity("QualityShims.Model.InspectionReport", b =>
                {
                    b.HasOne("QualityShims.Model.Part", "Part")
                        .WithMany("InspectionReports")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QualityShims.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QualityShims.Model.NominalDimension", b =>
                {
                    b.HasOne("QualityShims.Model.Part", "Part")
                        .WithMany("NominalDimensions")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("QualityShims.Model.Part", b =>
                {
                    b.HasOne("QualityShims.Model.PartType", "PartType")
                        .WithMany()
                        .HasForeignKey("PartTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartType");
                });

            modelBuilder.Entity("QualityShims.Model.InspectionReport", b =>
                {
                    b.Navigation("ActualDimensions");
                });

            modelBuilder.Entity("QualityShims.Model.Part", b =>
                {
                    b.Navigation("InspectionReports");

                    b.Navigation("NominalDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
